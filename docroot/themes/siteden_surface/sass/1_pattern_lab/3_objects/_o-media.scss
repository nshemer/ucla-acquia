//------------------------------------
//  Media Object
//------------------------------------

// Media Object
// Adapted from Inuit CSS
// @group Objects

// Media Object: Default Spacing unit
$o-media-gutter:          1em !default;
// Media Object: Tiny Spacing unit
$o-media-gutter--tiny:    $o-media-gutter / 4 !default;
// Media Object: Small Spacing unit
$o-media-gutter--small:   $o-media-gutter / 2 !default;
// Media Object: Large Spacing unit
$o-media-gutter--large:   $o-media-gutter * 2 !default;
// Media Object: Huge Spacing unit
$o-media-gutter--huge:    $o-media-gutter * 4 !default;

// Enable or disable object classes

// Media Object: Enable the `rev` modifier class
$o-media-enable--rev:     false !default;
// Media Object: Enable the `flush` modifier class
$o-media-enable--flush:   false !default;
// Media Object: Enable the `tiny` modifier class
$o-media-enable--tiny:    false !default;
// Media Object: Enable the `small` modifier class
$o-media-enable--small:   false !default;
// Media Object: Enable the `large` modifier class
$o-media-enable--large:   false !default;
// Media Object: Enable the `huge` modifier class
$o-media-enable--huge:    false !default;


// Media Object: The media object is an image to the left, with descriptive
// content to the right.
//
// Adapted from [Inuit CSS](https://github.com/inuitcss)
// @link https://github.com/inuitcss/objects.media/blob/master/_objects.media.scss
// @example markup
// <div class="o-media">
//   <div class="o-media__figure">
//     <img src="http://placehold.it/135x135" />
//   </div>
//   <div class="o-media__body">
//     <h2>Title to the content</h2>
//     <p>content</p>
//   </div>
// </div>
@mixin o-media() {
  display: flex;
  align-items: flex-start;
}

// Media Object: Figure (image) `Element`
@mixin o-media__figure() {
  margin-right: $o-media-gutter;
}

// Media Object: Body (content) `Element`
@mixin o-media__body() {
  display: block;
  flex: 1;

  &,
  > :last-child {
    margin-bottom: 0;
  }
}

// Media Object: Reverse `Modifier`
//
// Flips the Figure to the opposite (right) side
@mixin o-media--rev($component) {
  flex-direction: row-reverse;

  > .#{$component}__figure {
    margin-right: 0;
    margin-left: $o-media-gutter;
  }
}

// Media Object: Flush `Modifier`
//
// No space between the figure and body
@mixin o-media--flush($component) {
  > .#{$component}__figure {
    margin-right: 0;
    margin-left:  0;
  }
}

// Media Object: Tiny `Modifier`
//
// Greatly shortens space between the figure and body
@mixin o-media--tiny($component) {

  > .#{$component}__figure {
    margin-right: $o-media-gutter--tiny;
  }

  &.#{$component}--rev {
    > .#{$component}__figure {
      margin-right: 0;
      margin-left: $o-media-gutter--tiny;
    }
  }
}

// Media Object: Small `Modifier`
//
// Shortens space between the figure and body
@mixin o-media--small($component) {

  > .#{$component}__figure {
    margin-right: $o-media-gutter--small;
  }

  &.#{$component}--rev {
    > .#{$component}__figure {
      margin-right: 0;
      margin-left: $o-media-gutter--small;
    }
  }
}

// Media Object: Large `Modifier`
//
// Adds more space between the figure and body
@mixin o-media--large($component) {

  > .#{$component}__figure {
    margin-right: $o-media-gutter--large;
  }

  &.#{$component}--rev {
    > .#{$component}__figure {
      margin-right: 0;
      margin-left: $o-media-gutter--large;
    }
  }
}

// Media Object: Huge `Modifier`
//
// Greatly adds more space between the figure and body
@mixin o-media--huge($component) {

  > .#{$component}__figure {
    margin-right: $o-media-gutter--huge;
  }

  &.#{$component}--rev {
    > .#{$component}__figure {
      margin-right: 0;
      margin-left: $o-media-gutter--huge;
    }
  }
}


// Assign mixins to classes
.o-media {
  @include o-media();
}

.o-media__figure {
  @include o-media__figure();
}

.o-media__body {
  @include o-media__body();
}

@if ($o-media-enable--rev == true) {
  .o-media--rev {
    @include o-media--rev("o-media");
  }
}

@if ($o-media-enable--flush == true) {
  .o-media--flush {
    @include o-media--flush("o-media");
  }
}

@if ($o-media-enable--tiny == true) {
  .o-media--tiny {
    @include o-media--tiny("o-media");
  }
}

@if ($o-media-enable--small == true) {
  .o-media--small {
    @include o-media--small("o-media");
  }
}

@if ($o-media-enable--large == true) {
  .o-media--large {
    @include o-media--large("o-media");
  }
}

@if ($o-media-enable--huge == true) {
  .o-media--huge {
    @include o-media--huge("o-media");
  }
}
